<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RfEvents', 'doctrine');

/**
 * BaseRfEvents
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $race_type
 * @property string $event_type
 * @property date $date
 * @property time $time
 * @property integer $year
 * @property string $hosted_by
 * @property string $city
 * @property string $state
 * @property integer $last_year_participant_count
 * @property string $website_url
 * 
 * @method integer  get()                            Returns the current record's "id" value
 * @method string   get()                            Returns the current record's "name" value
 * @method string   get()                            Returns the current record's "race_type" value
 * @method string   get()                            Returns the current record's "event_type" value
 * @method date     get()                            Returns the current record's "date" value
 * @method time     get()                            Returns the current record's "time" value
 * @method integer  get()                            Returns the current record's "year" value
 * @method string   get()                            Returns the current record's "hosted_by" value
 * @method string   get()                            Returns the current record's "city" value
 * @method string   get()                            Returns the current record's "state" value
 * @method integer  get()                            Returns the current record's "last_year_participant_count" value
 * @method string   get()                            Returns the current record's "website_url" value
 * @method RfEvents set()                            Sets the current record's "id" value
 * @method RfEvents set()                            Sets the current record's "name" value
 * @method RfEvents set()                            Sets the current record's "race_type" value
 * @method RfEvents set()                            Sets the current record's "event_type" value
 * @method RfEvents set()                            Sets the current record's "date" value
 * @method RfEvents set()                            Sets the current record's "time" value
 * @method RfEvents set()                            Sets the current record's "year" value
 * @method RfEvents set()                            Sets the current record's "hosted_by" value
 * @method RfEvents set()                            Sets the current record's "city" value
 * @method RfEvents set()                            Sets the current record's "state" value
 * @method RfEvents set()                            Sets the current record's "last_year_participant_count" value
 * @method RfEvents set()                            Sets the current record's "website_url" value
 * 
 * @package    runforever
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRfEvents extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('rf_events');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('race_type', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('event_type', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('time', 'time', 25, array(
             'type' => 'time',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('year', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('hosted_by', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('city', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('state', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('last_year_participant_count', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('website_url', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}