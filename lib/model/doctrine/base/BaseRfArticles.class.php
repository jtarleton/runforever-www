<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RfArticles', 'doctrine');

/**
 * BaseRfArticles
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property string $author
 * @property string $url
 * @property string $img_src
 * @property string $source
 * @property timestamp $created_on
 * 
 * @method integer    get()           Returns the current record's "id" value
 * @method string     get()           Returns the current record's "title" value
 * @method string     get()           Returns the current record's "author" value
 * @method string     get()           Returns the current record's "url" value
 * @method string     get()           Returns the current record's "img_src" value
 * @method string     get()           Returns the current record's "source" value
 * @method timestamp  get()           Returns the current record's "created_on" value
 * @method RfArticles set()           Sets the current record's "id" value
 * @method RfArticles set()           Sets the current record's "title" value
 * @method RfArticles set()           Sets the current record's "author" value
 * @method RfArticles set()           Sets the current record's "url" value
 * @method RfArticles set()           Sets the current record's "img_src" value
 * @method RfArticles set()           Sets the current record's "source" value
 * @method RfArticles set()           Sets the current record's "created_on" value
 * 
 * @package    runforever
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRfArticles extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('rf_articles');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('author', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('url', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('img_src', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('source', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('created_on', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}